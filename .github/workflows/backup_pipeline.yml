name: Backup Workflow

on:
  # push:
  #   branches:
  #     - '*'
  # pull_request:
  #   branches:
  #     - '*'
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies AWS cli
        run: |
          python -m pip install --upgrade pip
          pip install awscli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Check AWS CLI connection
        run: aws sts get-caller-identity

      - name: Check versions.json exists in S3
        id: check_file
        run: |
          FILE_EXISTS=$(aws s3 ls s3://devops-intern-flameflashy/versions.json || true)
          if [[ -n "$FILE_EXISTS" ]]; then
            aws s3 cp s3://devops-intern-flameflashy/versions.json ~/backup/versions.json
            echo "::set-output name=file_exists::true"
          else
            echo "::set-output name=file_exists::false"
          fi

      - name: Make backup.sh executable
        run: chmod +x backup.sh

      - name: Create ssh-key and add to agent. Setup environment variables and run backup script
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa_actions
          chmod 600 ~/.ssh/id_rsa_actions
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa_actions
          ./backup.sh --max-backups 4

      - name: Upload backup and versions.json to S3
        run: |
          aws s3 cp ~/backup/*.tar.gz s3://devops-intern-flameflashy
          aws s3 cp ~/backup/versions.json s3://devops-intern-flameflashy

      - name: Archive backup to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: backup-archive
          path: ~/backup/*.tar.gz
          if-no-files-found: warn
        env:
          retention-days: 5

      - name: Upload versions JSON to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: versions-json
          path: ~/backup/versions.json
          if-no-files-found: warn
        env:
          retention-days: 5
